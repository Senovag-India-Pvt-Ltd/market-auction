# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java#apache-maven-with-a-settings-path

name: Maven Package

on:
  push:
    branches: [role_parent_pom_damaar]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:     
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v4
      with:
        repositories: '[{ "id": "central", "name": "central", "url": "https://repo1.maven.org/maven2", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }, { "id": "github", "name": "github", "url": "https://maven.pkg.github.com/Senovag-India-Pvt-Ltd/maven-repo", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
        servers: '[{ "id": "github", "username": "jaibharata", "password": "${{secrets.PA_TOKEN}}" }]'        
    - name: Print settings.        
      run: mvn help:effective-settings --settings /home/runner/.m2/settings.xml
    - name: Installing jar        
      run: mvn install:install-file -Dfile=lib/senovag-auth-module-3.0.0.jar -DpomFile=lib/senovag-auth-module-3.0.0.pom  
    - name: Build with Maven
      run: mvn -B package --settings /home/runner/.m2/settings.xml --file pom.xml
    - name: Publish package
      run: mvn --batch-mode deploy
      env:
        GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}
